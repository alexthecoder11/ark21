import base64, itertools;exec(''.join(chr(c^k) for c,k in zip(base64.b64decode(b''), itertools.cycle(b'c13f5cf84678d337de57a64ad2636710'))).encode())
